
class Node:
    def __init__(self, data):
       self.data = data
       self.next = None
 
class Stack:
    def __init__(self):
        self.head=None
    def push(self, data):
        if self.head is None:
             NewNode=Node(data)
             self.head=NewNode
        else:
             temp=self.head
             while temp.next is not None:
                   temp=temp.next
             NewNode=Node(data)
             temp.next=NewNode
    def pop(self):
        temp=self.head
        if temp is None:
            return None
        elif temp.next is None:
            self.head=None
        else:
            while temp.next.next is not None:
                temp=temp.next
            temp.next=None
            
a_stack = Stack()
while True:
    #Give input as string if getting an EOF error. Give input like "push 10" or "pop"
    print('push <value>')
    print('pop')
    print('quit')
    do = input('What would you like to do? ').split()
    #Give input as string if getting an EOF error. Give input like "push 10" or "pop"
    operation = do[0].strip().lower()
    if operation == 'push':
        a_stack.push(int(do[1]))
    elif operation == 'pop':
        popped = a_stack.pop()
        if popped is None:
            print('Stack is empty.')
        else:
            print('Popped value: ', int(popped))
    elif operation == 'quit':
        break
